# ------------------------------------------------------------------------------
# ~/.config/lf/lfrc

set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set number
set relativenumber
set hidden
set info size:time
set tabstop 4
set ratios 2:3:4
set timefmt "Mon, 02 Jan 2006 15:04:05 MST"
set cursorpreviewfmt "\033[7m"

# ------------------------------------------------------------------------------

map w $$SHELL
map <enter> push $<space>

map <c-s> :source ~/.config/lf/lfrc

map <delete> _delete

map P :symlink

map <c-c> _copy_to_old
map <c-a> _archive
map <c-u> _unpack

map x $$f
map X !$f

# ------------------------------------------------------------------------------

cmd _delete ${{
    set -f
    printf "\nDeleting:\n"
    printf "$fx\n"
    read -n1 -p 'Continue? [y/N]: ' re
    [ "$re" = "y" ] && printf "\nProcessing... " && rm -rf $fx && printf "Done\n"
    printf "\n"
}}

# ------------------------------------------------------------------------------

# y (select for copy) and P to paste soft-link
# d (select for cut) and P to paste hard-link
cmd symlink %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

# ------------------------------------------------------------------------------

cmd _copy_to_old ${{
    set -f
    timestamp=$(date '+%Y%m%d%H%M%S')
    printf "Copying `basename $f` to:\n"
    printf "[o] `basename $f`.old (default)\n"
    printf "[t] `basename $f`.${timestamp}.old\n"
    printf "[d] `basename $f`.dist\n"
    read -n28 -p 'Continue? [y/n/o/t/d/<filename>]: ' ans
    [ -z "$ans" -o "$ans" = "n" ] && exit 0
    case $ans in
        y|o) cp -aLv "$f" "$f".old ;;
        t) cp -aLv "$f" "$f".${timestamp}.old ;;
        d) cp -aLv "$f" "$f".dist ;;
        *) cp -aLvi "$f" "$ans" ;;
    esac
}}

# ------------------------------------------------------------------------------

cmd _archive ${{
    set -f
    command -v atool >/dev/null || { echo "atool command not found."; exit 1; }
    printf "Archiving: $f\n"
    read -n1 -p 'Continue? [y/N]: ' ans
    if [ "$ans" = "y" ]; then
        printf "\n"
        ff=$(basename "$f")
        apack "$ff".tar.xz "$ff"
    fi
}}

# ------------------------------------------------------------------------------

cmd _unpack ${{
    set -f
    command -v atool >/dev/null || { echo "atool command not found."; exit 1; }
    DELETE_ALL=0
    for f in $fx; do
        #printf "Unpack $f ... "
        aunpack $f
        if [ "$?" ]; then
            if [ "$DELETE_ALL" -eq 1 ]; then
                #printf "OK\n"
                printf "\nProcessing... " && rm -rf $f && printf "Done\n"
            else
                read -n1 -p 'Delete sources? [y/Y/N]: ' re
                [ "$re" = "Y" ] && DELETE_ALL=1 && re=y
                [ "$re" = "y" ] && printf "\nProcessing... " && rm -rf $f && printf "Done\n"
            fi
            printf "\n"
        fi
    done
}}

# ------------------------------------------------------------------------------

:source ~/.config/lf/lfrc.local

